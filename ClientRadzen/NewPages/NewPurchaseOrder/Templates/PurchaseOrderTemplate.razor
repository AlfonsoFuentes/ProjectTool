


<RadzenRow>


    <RadzenColumn Size="12" SizeMD="6">
        <RadzenFormField Text="Purchase order Name" Style="width: 100%;">
            <RadzenTextBox @bind-Value=@Model.PurchaseOrderName class="w-100" Disabled=IsNotAbleToEditMainData
                           @oninput="@((arg)=>ChangeName(arg.Value!.ToString()!))"
                           Name="name" />

        </RadzenFormField>
        <ValidationMessage For="() => Model.PurchaseOrderName" style="color:red; font-size:x-small;" />
        <ValidationMessage For="() => Model.IsAnyNameEmpty" style="color:red; font-size:x-small;" />
    </RadzenColumn>
</RadzenRow>
@if (ShowPurchaseOrderNumber)
{
    <RadzenRow>
        <RadzenColumn Size="12" SizeMD="3">
            <RadzenFormField Text="Purchase order Number" Style="width: 100%;">
                <RadzenTextBox @bind-Value=@Model.PurchaseOrderNumber class="w-100" Disabled=IsNotAbleToEditMainData
                               @oninput="@((arg)=>ChangePONumber(arg.Value!.ToString()!))"
                               Name="PONumber" />

            </RadzenFormField>
            <ValidationMessage For="() => Model.PurchaseOrderNumber" style="color:red; font-size:x-small;" />


        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="3">
            <RadzenFormField Text="Purchase order Expected date" Style="width: 100%;">
                <RadzenDatePicker @bind-Value=@Model.ExpectedDate Name="expetedon" AllowClear=true DateFormat="d"
                                  Change=ChangedExpectedDate Disabled=IsNotAbleToEditMainData
                                  TValue="DateTime?">

                </RadzenDatePicker>

            </RadzenFormField>
            <ValidationMessage For="() => Model.ExpectedDate" style="color:red; font-size:x-small;" />


        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
        </RadzenColumn>
    </RadzenRow>
}
<RadzenRow>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="Supplier" Style="width: 100%;">
            <RadzenDropDown @bind-Value=@Model.Supplier Data=@Suppliers
                            Name="supplier" TextProperty="Name"
                            Placeholder="Select Supplier" Disabled=IsNotAbleToEditMainData
                            Change="@(()=>SetSupplier(Model.Supplier!))"
                            AllowClear=true
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                            AllowFiltering="true"
                            TValue="NewSupplierResponse?" />



        </RadzenFormField>
        <ValidationMessage For="() => Model.Supplier" style="color:red; font-size:x-small;" />
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenButton Text="Add Supplier" Icon="support" Click="CreateSupplier" Style="width: 100%;" class="mt-2" Disabled=IsNotAbleToEditMainData
                      MouseEnter="@(args => MainApp.ShowTooltip(args,$"Add new Supplier", TooltipPosition.Top) )"></RadzenButton>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">

        <RadzenFormField Text="Vendor Code" Style="width: 100%; height:100%">
            <RadzenText Text=@Model.SupplierVendorCode class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
        </RadzenFormField>

    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">

        <RadzenFormField Text="Tax Code" Style="width: 100%; height:100%">
            <RadzenText Text=@Model.TaxCode class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
        </RadzenFormField>

    </RadzenColumn>
</RadzenRow>
<RadzenRow>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="Purchase Requisition" Style="width: 100%;">
            <RadzenTextBox @bind-Value=@Model.PurchaseRequisition class="w-100" Disabled=IsNotAbleToEditMainData
                           @oninput="@((arg)=>ChangePR(arg.Value!.ToString()!))"
                           Name="pr" />

        </RadzenFormField>
        <ValidationMessage For="() => Model.PurchaseRequisition" style="color:red; font-size:x-small;" />
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="Quote No" Style="width: 100%;">
            <RadzenTextBox @bind-Value=@Model.QuoteNo class="w-100" Disabled=IsNotAbleToEditMainData
                           @oninput="@((arg)=>ChangeQuote(arg.Value!.ToString()!))"
                           Name="quoteno" />

        </RadzenFormField>
        <ValidationMessage For="() => Model.QuoteNo" style="color:red; font-size:x-small;" />
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="Account" Style="width: 100%;">

            <RadzenText Text=@Model.AccountAssigment class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
        </RadzenFormField>
    </RadzenColumn>

    @if (Model.IsAlteration)
    {

        <RadzenColumn Size="12" SizeMD="3">
            <RadzenFormField Text="MWO" Style="width: 100%;">

                <RadzenText Text=@Model.CECName class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
            </RadzenFormField>
        </RadzenColumn>
    }


</RadzenRow>
<RadzenRow>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="Quote Currency" Style="width: 100%;">

            <RadzenDropDown @bind-Value=@Model.QuoteCurrency Data=@CurrencyEnum.List Style="width: 100%;"
                            AllowClear=true
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                            AllowFiltering="true" Disabled=@(Model.IsAlteration||IsNotAbleToEditMainData)
                            Change="@(()=>ChangeQuoteCurrency(Model.QuoteCurrency))"
                            Name="type" TextProperty="Name"
                            TValue="CurrencyEnum" />
        </RadzenFormField>
        <ValidationMessage For="() => Model.QuoteCurrency" style="color:red; font-size:x-small;" />
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        @if (Model.PurchaseOrderCurrency.Id == CurrencyEnum.COP.Id)
        {
            <RadzenFormField Text=@($"PO TRM COP to USD {Model.CurrencyDate.ToString("d")}") Style="width: 100%;">
                <RadzenNumeric ShowUpDown=false @bind-Value=@Model.USDCOP class="w-100" Disabled=IsNotAbleToEditMainData
                               @oninput="@((arg)=>ChangeTRMUSDCOP(arg.Value!.ToString()!))"
                               Name="usdcop" />

            </RadzenFormField>
            <ValidationMessage For="() => Model.USDCOP" style="color:red; font-size:x-small;" />
        }
        else if (Model.PurchaseOrderCurrency.Id == CurrencyEnum.EUR.Id)
        {
            <RadzenFormField Text=@($"PO TRM EUR to USD {Model.CurrencyDate.ToString("d")}") Style="width: 100%;">
                <RadzenNumeric ShowUpDown=false @bind-Value=@Model.USDEUR class="w-100" Disabled=IsNotAbleToEditMainData
                               @oninput="@((arg)=>ChangeTRMUSDEUR(arg.Value!.ToString()!))"
                               Name="usdeur" />

            </RadzenFormField>
            <ValidationMessage For="() => Model.USDEUR" style="color:red; font-size:x-small;" />
        }
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="PO Currency" Style="width: 100%;">
            <RadzenText Text=@Model.PurchaseOrderCurrency.Name class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />


        </RadzenFormField>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenFormField Text="SPL" Style="width: 100%;">
            <RadzenText Text=@Model.SPL class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />


        </RadzenFormField>
    </RadzenColumn>
</RadzenRow>


<RadzenRow class="rz-mt-2">
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenButton Click="@SaveAsync" Variant="Variant.Flat" Text="@NameSaveButton" Disabled=@(!Validated)
                              MouseEnter="@(args => MainApp.ShowTooltip(args,$"{NameSaveButton}", TooltipPosition.Top) )" Style="width: 100%;" />
            </RadzenColumn>

            <RadzenColumn Size="12" SizeMD="6">
                <RadzenButton Click="@Cancel" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Light" Text="Cancel" Style="width: 100%"
                              MouseEnter="@(args => MainApp.ShowTooltip(args,$"Cancel", TooltipPosition.Top) )" />
            </RadzenColumn>
        </RadzenRow>
        @if (ShowReceive)
        {
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenRadioButtonList Value="@WayToReceivePurchaseOrder" TValue="WayToReceivePurchaseorderEnum"
                                           Change=@(args => OnChangeWayToReceivePurchaseOrder(args)) Orientation=Orientation.Horizontal
                                           class="mb-3 mt-4">
                        <Items>
                            <RadzenRadioButtonListItem Text="Complete" Value="WayToReceivePurchaseorderEnum.CompleteOrder" />
                            <RadzenRadioButtonListItem Text="Percentage" Value="WayToReceivePurchaseorderEnum.PercentageOrder" />


                        </Items>
                    </RadzenRadioButtonList>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="6">
                    @if (WayToReceivePurchaseOrder.Id == WayToReceivePurchaseorderEnum.PercentageOrder.Id)
                    {
                        <RadzenFormField Text="Percentage To Receive" Style="width:100%;">
                            <RadzenNumeric @bind-Value=@PercentageToReceive ShowUpDown=false class="w-100" TValue="double"
                                           Max="100" Min="0"
                                           @oninput="@((arg)=>OnChangeReceivePercentagePurchaseOrder(arg.Value!.ToString()!))">
                            </RadzenNumeric>
                        </RadzenFormField>
                    }
                </RadzenColumn>


            </RadzenRow>
        }

    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6">

        <RadzenCard Style="width:100%">
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="@columnPOValues">
                    <RowTemplateCurrency Label="PO Value, $USD" Value="Model.POValueUSD"></RowTemplateCurrency>

                    <ValidationMessage For="() => Model.IsAnyValueNotDefined" style="color:red; font-size:x-small;" />
                    @if (ShowReceive || ShowEditReceive)
                    {
                        <RowTemplateCurrency Label="Actual,USD" Value="Model.POActualReceivingUSD"></RowTemplateCurrency>
                        <RowTemplateCurrency Label="Commitment, USD" Value="Model.POCommitmentReceivingUSD"></RowTemplateCurrency>
                    }
                </RadzenColumn>
                @if (Model.PurchaseOrderCurrency.Id != CurrencyEnum.USD.Id && Model.PurchaseOrderCurrency.Id != CurrencyEnum.None.Id)
                {
                    <RadzenColumn Size="12" SizeMD="6">

                        <RowTemplateCurrency Label=@($"PO Value, ${Model.PurchaseOrderCurrency.Name}") Value="Model.POValuePurchaseOrderCurrency"></RowTemplateCurrency>
                        @if (ShowReceive || ShowEditReceive)
                        {
                            <RowTemplateCurrency Label=@($"Actual, ${Model.PurchaseOrderCurrency.Name}") Value="Model.POActualReceivingCurrency"></RowTemplateCurrency>
                            <RowTemplateCurrency Label=@($"Commitment, ${Model.PurchaseOrderCurrency.Name}") Value="Model.POCommitmentReceivingCurrency"></RowTemplateCurrency>
                        }

                    </RadzenColumn>


                }
            </RadzenRow>
        </RadzenCard>
        <ValidationMessage For="() => Model.IsAnyValueNotWellReceived" style="color:red; font-size:x-small;" />



    </RadzenColumn>
</RadzenRow>

<CascadingValue Value="this">
    @if (ShowReceive)
    {
        <PurchaseOrderItemReceivingTemplate></PurchaseOrderItemReceivingTemplate>
    }
    else if (ShowEditReceive)
    {
        <PurchaseOrderItemReceivedTemplate></PurchaseOrderItemReceivedTemplate>
    }
    else
    {
        <PurchaseOrderItemTemplate></PurchaseOrderItemTemplate>
    }

</CascadingValue>





@code {
    bool debug = true;


    int MaxColumn = 12;
    int columnPOValues => Model.PurchaseOrderCurrency.Id != CurrencyEnum.USD.Id ? 6 : 12;
}
