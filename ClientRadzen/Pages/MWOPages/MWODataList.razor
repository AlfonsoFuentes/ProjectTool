@page "/MWODataList"
<RadzenStack Orientation="Orientation.Vertical">

    <RadzenRow>
        <RadzenColumn Size="12" SizeLG="8">
            <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenButton Icon="add" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" Class="rz-mr-1 rz-ml-4" Click="@(()=>AddNew())"
                              MouseEnter="@(args => ShowTooltip(args,$"Add new MWO") )" />
                <RadzenButton Icon="home" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" Class="rz-mr-1 rz-ml-1" Click="@(()=>GoToHome())"
                              MouseEnter="@(args => ShowTooltip(args,$"Go to Home Page") )" />
            </RadzenStack>

        </RadzenColumn>
        <RadzenColumn Size="12" SizeLG="4">
            <RadzenTextBox Class="rz-ml-4" Style="width:100%;" Placeholder="Search..." @bind-Value="@nameFilter" @oninput=@((arg)=>nameFilter=arg.Value!.ToString()!)></RadzenTextBox>
        </RadzenColumn>
    </RadzenRow>

    <RadzenRow>
        <RadzenColumn Size="12" SizeLG="12">
            <RadzenDataList AllowVirtualization=true Style="height:700px;overflow:auto;"
                            WrapItems="false" AllowPaging="true" Density="Density.Compact" PageSize=5
                            Data="@FilteredItems" TItem="MWOResponse"  PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                <Template Context="product">
                    <RadzenCard Style="width: 100%; padding: 0;">
                        <RadzenRow>
                            <CascadingValue Value="this">
                                <MWOData Data="@product"></MWOData>
                            </CascadingValue>
                          
                        </RadzenRow>
                    </RadzenCard>
                </Template>

            </RadzenDataList>
        </RadzenColumn>
    </RadzenRow>




</RadzenStack>
@code {
    void NotifyMessage(NotificationSeverity Severity, string Leyend, List<string> messages)
    {
        AlertStyle alertStyle = Severity == NotificationSeverity.Success ? AlertStyle.Success : AlertStyle.Danger;

        NotificationService.Notify(new NotificationMessage
            {
                Severity = Severity,
                SummaryContent = ns =>@<RadzenText TextStyle="TextStyle.H6">@Leyend</RadzenText>,
            DetailContent = ns =>@<SimpleAlertMessage AlertStyle="@alertStyle" Messages=@messages></SimpleAlertMessage>,


            Duration = Severity == NotificationSeverity.Success ? 2000 : 4000,
        });

    }
    void ShowTooltip(ElementReference elementReference, string text) =>
    TooltipService.Open(elementReference, text, new TooltipOptions() { Position = TooltipPosition.Right });
}
