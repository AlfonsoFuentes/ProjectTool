@page "/CreateMWO"

<PageTitle>Create New MWO</PageTitle>

<RadzenStack Orientation="Orientation.Vertical">
    <RadzenRow>
        <RadzenText TextStyle="TextStyle.DisplayH5" Text="@($"Create MWO")"></RadzenText>
    </RadzenRow>
    <EditForm Model="@Model" OnValidSubmit="ValidateAsync">
        <FluentValidationValidator @ref="_fluentValidationValidator" />
        <RadzenRow>
            <RadzenColumn SizeXS="8" SizeSM="4">
                <RadzenFormField Text="Name" Style="width: 100%;">
                    <RadzenTextBox @bind-Value=@Model.Name AutoComplete class="w-100"
                                    @oninput="@((arg)=>ChangeName(arg.Value!.ToString()!))"
                                    Name="name" />

                 </RadzenFormField>
                 <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
             </RadzenColumn>
         </RadzenRow>
         <RadzenRow>
             <RadzenColumn SizeXS="8" SizeSM="4">
                 <RadzenFormField Text="Type" Style="width: 100%;">
                     <RadzenDropDown @bind-Value=@Model.Type Data=@MWOTypeEnum.List Style="width: 100%; "
                                     Name="type" TextProperty="Name" Change="@(()=>ChangeType())"
                                     TValue="MWOTypeEnum" />
                 </RadzenFormField>
                 <ValidationMessage For="() => Model.Type.Id" style="color:red; font-size:x-small;" />
             </RadzenColumn>
         </RadzenRow>
         <RadzenRow>
             <RadzenColumn SizeXS="8" SizeSM="4">
                 <RadzenFormField Text="Tax for Alterations" Style="width: 100%;">
                     <RadzenNumeric ShowUpDown=false @bind-Value=@Model.PercentageTaxForAlterations Style="width:100%"
                                    @oninput="@((arg)=>ChangeTaxForAlterations(arg.Value!.ToString()!))"
                                    Name="TaxAlterations" />

                 </RadzenFormField>
                 <ValidationMessage For="() => Model.PercentageTaxForAlterations" style="color:red; font-size:x-small;" />
             </RadzenColumn>
         </RadzenRow>
         <RadzenRow>
             <RadzenColumn SizeXS="8" SizeSM="4">
                 <RadzenFormField Text="Capitalized Salaries" Style="width: 100%;">
                     <RadzenNumeric ShowUpDown=false @bind-Value=@Model.PercentageEngineering Style="width:100%"
                                    @oninput="@((arg)=>ChangePercentageEngineering(arg.Value!.ToString()!))"
                                    Name="salaries" />

                 </RadzenFormField>
                 <ValidationMessage For="() => Model.PercentageEngineering" style="color:red; font-size:x-small;" />
             </RadzenColumn>
         </RadzenRow>
         <RadzenRow>
             <RadzenColumn SizeXS="8" SizeSM="4">
                 <RadzenFormField Text="Contingency" Style="width: 100%;">
                     <RadzenNumeric ShowUpDown=false @bind-Value=@Model.PercentageContingency Style="width:100%"
                                    @oninput="@((arg)=>ChangePercentageContingency(arg.Value!.ToString()!))"
                                    Name="contingency" />

                 </RadzenFormField>
                 <ValidationMessage For="() => Model.PercentageContingency" style="color:red; font-size:x-small;" />
             </RadzenColumn>
         </RadzenRow>
         <RadzenRow>
             <RadzenColumn SizeXS="8" SizeSM="4">
                 <RadzenLabel Text="Is Asset real Productive?" Component="True" />
                 <RadzenSwitch @bind-Value=@Model.IsAssetProductive
                               InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})"></RadzenSwitch>
             </RadzenColumn>
         </RadzenRow>
         <RadzenRow>
             <RadzenColumn SizeXS="8" SizeSM="4">
                 @if (!Model.IsAssetProductive)
                {
                    <RadzenFormField Text="Taxes No Productive" Style="width: 100%;">
                        <RadzenNumeric ShowUpDown=false @bind-Value=@Model.PercentageAssetNoProductive Style="width:100%"
                                       @oninput="@((arg)=>ChangePercentageTaxes(arg.Value!.ToString()!))"
                                       Name="taxesnoproductive" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.PercentageAssetNoProductive" style="color:red; font-size:x-small;" />


                }
            </RadzenColumn>
        </RadzenRow>

    </EditForm>
   
    <RadzenRow>
        <RadzenStack Orientation="Orientation.Horizontal">
            <RadzenButton ButtonStyle=ButtonStyle.Primary ButtonType=ButtonType.Submit Click="SaveAsync" Disabled=@NotValidated
                          MouseEnter="@(args => MainApp.ShowTooltip(args,$"Create",TooltipPosition.Top) )">Create</RadzenButton>
            <RadzenButton ButtonStyle=ButtonStyle.Primary Variant="Variant.Outlined" Click="CancelAsync"
                          MouseEnter="@(args => MainApp.ShowTooltip(args,$"Cancel",TooltipPosition.Top) )">Cancel</RadzenButton>
        </RadzenStack>

    </RadzenRow>
</RadzenStack>

@code {
}
   
