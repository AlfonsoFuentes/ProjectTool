@if (EditRow && Data == selectedRow)
{
    <RadzenColumn Size="12" SizeLG="3" Class="rz-p-2">
        <RadzenFormField Text="MWO Name" Style="width:100%;">
            <RadzenTextArea @bind-Value=@Data.Name
                            Rows="2"
                            @oninput="@((arg)=>Data.Name=arg.Value!.ToString()!)"
                            @onkeydown="@((arg)=>OnKeyDown(arg,Data))"></RadzenTextArea>
        </RadzenFormField>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeLG="7" Class="rz-p-2">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="6" SizeLG="4">
                <RadzenFormField Text="Type" Style="width: 100%;">
                    <RadzenDropDown @bind-Value=@Data.MWOType Data=@MWOTypeEnum.List Style="width: 100%;"
                                    Name="type" TextProperty="Name"
                                    TValue="MWOTypeEnum" />
                </RadzenFormField>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="6" SizeLG="5">
                <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">
                    <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Capital</RadzenText>
                    <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                 Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Capital)}") />
                </RadzenRow>
                <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                    <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Expenses</RadzenText>
                    <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                 Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Expenses)}") />
                </RadzenRow>
                <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                    <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Apropiation</RadzenText>
                    <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                 Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Appropiation)}") />
                </RadzenRow>
            </RadzenColumn>
        </RadzenRow>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-2">
        <RadzenButton Icon="save" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1" Click="@(()=>SaveAsync(Data))"
                      MouseEnter="@(args => ShowTooltip(args,$"Update MWO: {Data.Name}") )" />
        <RadzenButton Icon="cancel" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-ml-2" Click="@(()=>CancelAsync())"
                      MouseEnter="@(args => ShowTooltip(args,$"Cancel") )" />
    </RadzenColumn>
}
else
{
    <RadzenColumn Size="12" SizeLG="3" Class="rz-p-2">
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-color-primary"
                    @ondblclick="@(()=>OnDoubleClick(Data))">@(Data.Name)</RadzenText>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeLG="7" Class="rz-p-2">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="6" SizeLG="4">
                <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">
                    <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5" @ondblclick="@(()=>OnDoubleClick(Data))">MWO Type</RadzenText>
                    <RadzenText TextStyle="TextStyle.Caption" @ondblclick="@(()=>OnDoubleClick(Data))">@(Data.Type)</RadzenText>
                </RadzenRow>
                @if (Data.Status.Id == MWOStatusEnum.Approved.Id)
                {
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">
                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5" Class="rz-mb-0">CEC Name</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption">@(Data.CECName)</RadzenText>
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">
                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5" Class="rz-mb-0">Cost Center</RadzenText>
                        <RadzenText TextStyle="TextStyle.Caption">@(Data.CostCenter)</RadzenText>
                    </RadzenRow>
                }
            </RadzenColumn>
            @if (Data.Status.Id == MWOStatusEnum.Created.Id)
            {

                <RadzenColumn Size="12" SizeMD="6" SizeLG="5">
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">
                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Capital</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Capital)}") />
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Expenses</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Expenses)}") />
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Apropiation</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Appropiation)}") />
                    </RadzenRow>
                </RadzenColumn>


            }
            else if (Data.Status.Id == MWOStatusEnum.Approved.Id)
            {

                <RadzenColumn Size="12" SizeMD="6" SizeLG="5">
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">
                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Budget</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Budget)}") />
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Assigned</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Assigned)}") />
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Actual</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Actual)}") />
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Potencial</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Potencial)}") />
                    </RadzenRow>
                    <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%" Class="rz-p-1">

                        <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5">Pending</RadzenText>
                        <RadzenBadge BadgeStyle="BadgeStyle.Primary" Variant="Variant.Outlined"
                                     Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", Data.Pending)}") />
                    </RadzenRow>
                </RadzenColumn>

            }
        </RadzenRow>

    </RadzenColumn>
    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-2">
        <RadzenStack Orientation="Orientation.Vertical">
            @if (Data.Status.Id == MWOStatusEnum.Created.Id)
            {
                <RadzenRow>
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1" Click="@(()=>Edit(Data))"
                                  MouseEnter="@(args => ShowTooltip(args,$"Edit Inline MWO: {Data.Name}") )" />
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-ml-2" Click="@(()=>Delete(Data))"
                                  MouseEnter="@(args => ShowTooltip(args,$"Delete {Data.Name}") )" />
                    <RadzenButton Icon="dynamic_form" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1 rz-ml-2"
                                  Click="@(()=>EditByForm(Data))" MouseEnter="@(args => ShowTooltip(args,$"Edit by form MWO: {Data.Name}") )" />

                </RadzenRow>
                <RadzenRow>
                    <RadzenButton Icon="verified" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1"
                                  Click="@(()=>Approve(Data))" MouseEnter="@(args => ShowTooltip(args,$"Approve MWO: {Data.Name}") )" />
                    <RadzenButton Icon="new_label" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-ml-2"
                                  Click="@(()=>AddItemToMWO(Data))" MouseEnter="@(args => ShowTooltip(args,$"Add Item to MWO: {Data.Name}") )" />
                    <RadzenButton Icon="format_list_bulleted" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1 rz-ml-2"
                                  Click="@(()=>ShowItemsofMWO(Data))" MouseEnter="@(args => ShowTooltip(args,$"Show Items for MWO: {Data.Name}") )" />

                </RadzenRow>


            }
            else if (Data.Status.Id == MWOStatusEnum.Approved.Id)
            {
                <RadzenRow>
                    <RadzenButton Icon="format_list_bulleted" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1"
                                  Click="@(()=>ShowItemsofMWO(Data))" MouseEnter="@(args => ShowTooltip(args,$"Show Items for MWO: {Data.CECName}") )" />
                    <RadzenButton Icon="add_shopping_cart" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-ml-2"
                                  Click="@(()=>EditByForm(Data))" MouseEnter="@(args => ShowTooltip(args,$"Add purchase order to MWO: {Data.CECName}") )" />
                </RadzenRow>
            }

        </RadzenStack>
    </RadzenColumn>
}


@code {
    void ShowTooltip(ElementReference elementReference, string text) =>
    TooltipService.Open(elementReference, text, new TooltipOptions() { Position = TooltipPosition.Left });

    void NotifyMessage(NotificationSeverity Severity, string Leyend, List<string> messages)
    {
        AlertStyle alertStyle = Severity == NotificationSeverity.Success ? AlertStyle.Success : AlertStyle.Danger;

        NotificationService.Notify(new NotificationMessage
            {
                Severity = Severity,
                SummaryContent = ns =>@<RadzenText TextStyle="TextStyle.H6">@Leyend</RadzenText>,
            DetailContent = ns =>@<SimpleAlertMessage AlertStyle="@alertStyle" Messages=@messages></SimpleAlertMessage>,


            Duration = Severity == NotificationSeverity.Success ? 2000 : 4000,
        });

    }

}
