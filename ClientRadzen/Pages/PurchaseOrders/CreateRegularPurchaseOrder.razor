@page "/CreatePurchaseOrder/{BudgetItemId:guid}"

<PageTitle>Create New Purchase Order </PageTitle>
@if (debug)
{

}
@if (Model != null)
{
    
    <RadzenStack Orientation="Orientation.Vertical">
        <RadzenRow>
            <RadzenText TextStyle="TextStyle.DisplayH5"
                        Text="@($"Create New Purchase Order in {Model.MWOCECName} {Model.MWOName} with Main Budget {Model.MainBudgetItem.Name}")"></RadzenText>
        </RadzenRow>


        <EditForm Model="@Model" OnValidSubmit="ValidateAsync">
            <FluentValidationValidator @ref="_fluentValidationValidator" />
            <RadzenRow>


                <RadzenColumn Size="12" SizeMD="@MaxColumn">
                    <RadzenFormField Text="Purchase order Name" Style="width: 100%;">
                        <RadzenTextBox @bind-Value=@Model.PurchaseorderName class="w-100"
                                       @oninput="@((arg)=>ChangeName(arg.Value!.ToString()!))"
                                       Name="name" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.PurchaseorderName" style="color:red; font-size:x-small;" />

                </RadzenColumn>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Supplier" Style="width: 100%;">
                        <RadzenDropDown @bind-Value=@Model.Supplier Data=@Suppliers
                                        Name="supplier" TextProperty="Name"
                                        Placeholder="Select Supplier"
                                        Change="@(()=>SetSupplier(Model.Supplier!))"
                                        AllowClear=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                                        AllowFiltering="true"
                                        TValue="SupplierResponse?" />



                    </RadzenFormField>
                    <ValidationMessage For="() => Model.Supplier" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenButton Text="Add Supplier" Icon="support" Click="CreateSupplier" Style="width: 100%;" class="mt-2"
                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Add new Supplier", TooltipPosition.Top) )"></RadzenButton>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">

                    <RadzenFormField Text="Vendor Code" Style="width: 100%; height:100%">
                        <RadzenText Text=@Model.VendorCode class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                    </RadzenFormField>

                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">

                    <RadzenFormField Text="Tax Code" Style="width: 100%; height:100%">
                        <RadzenText Text=@Model.TaxCode class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                    </RadzenFormField>

                </RadzenColumn>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Purchase Requisition" Style="width: 100%;">
                        <RadzenTextBox @bind-Value=@Model.PurchaseRequisition class="w-100"
                                       @oninput="@((arg)=>ChangePR(arg.Value!.ToString()!))"
                                       Name="pr" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.PurchaseRequisition" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Quote No" Style="width: 100%;">
                        <RadzenTextBox @bind-Value=@Model.QuoteNo class="w-100"
                                       @oninput="@((arg)=>ChangeQuote(arg.Value!.ToString()!))"
                                       Name="quoteno" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.QuoteNo" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                @if (Model.IsAlteration)
                {
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenFormField Text="Account" Style="width: 100%;">

                            <RadzenText Text=@Model.AccountAssigment class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenFormField Text="MWO" Style="width: 100%;">

                            <RadzenText Text=@Model.MWOCECName class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                        </RadzenFormField>
                    </RadzenColumn>
                }
                else
                {
                    <RadzenColumn Size="12" SizeMD="6">
                        <RadzenFormField Text="Account" Style="width: 100%;">

                            <RadzenText Text=@Model.AccountAssigment class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                        </RadzenFormField>
                    </RadzenColumn>
                }
                
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Quote Currency" Style="width: 100%;">

                        <RadzenDropDown @bind-Value=@Model.QuoteCurrency Data=@CurrencyEnum.List Style="width: 100%;"
                                        AllowClear=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                                        AllowFiltering="true" Disabled=Model.IsAlteration
                                        Change="@(()=>ChangeQuoteCurrency(Model.QuoteCurrency))"
                                        Name="type" TextProperty="Name"
                                        TValue="CurrencyEnum" />
                    </RadzenFormField>
                    <ValidationMessage For="() => Model.QuoteCurrency" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    @if (Model.PurchaseOrderCurrency.Id == CurrencyEnum.COP.Id)
                    {
                        <RadzenFormField Text=@($"PO TRM COP to USD {Model.CurrencyDateOnly}") Style="width: 100%;">
                            <RadzenNumeric ShowUpDown=false @bind-Value=@Model.USDCOP class="w-100"
                                           @oninput="@((arg)=>ChangeTRMUSDCOP(arg.Value!.ToString()!))"
                                           Name="usdcop" />

                        </RadzenFormField>
                        <ValidationMessage For="() => Model.USDCOP" style="color:red; font-size:x-small;" />
                    }
                    else if (Model.PurchaseOrderCurrency.Id == CurrencyEnum.EUR.Id)
                    {
                        <RadzenFormField Text=@($"PO TRM EUR to USD {Model.CurrencyDateOnly}") Style="width: 100%;">
                            <RadzenNumeric ShowUpDown=false @bind-Value=@Model.USDEUR class="w-100"
                                           @oninput="@((arg)=>ChangeTRMUSDEUR(arg.Value!.ToString()!))"
                                           Name="usdeur" />

                        </RadzenFormField>
                        <ValidationMessage For="() => Model.USDEUR" style="color:red; font-size:x-small;" />
                    }
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="PO Currency" Style="width: 100%;">
                        <RadzenText Text=@Model.PurchaseOrderCurrency.Name class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />


                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="SPL" Style="width: 100%;">
                        <RadzenText Text=@Model.SPL class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />


                    </RadzenFormField>
                </RadzenColumn>
            </RadzenRow>


            <RadzenRow class="rz-mt-2">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenButton Click="@SaveAsync" Variant="Variant.Flat" Text="@($"Create PR {Model.PurchaseRequisition}")" Disabled=@(!Validated)
                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Create PR", TooltipPosition.Top) )" Style="width: 100%;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenButton Click="@Cancel" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Light" Text="Cancel" Style="width: 100%"
                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Cancel", TooltipPosition.Top) )" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenRow>

                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenRow>
                                <RadzenFormField Text="PO Value, $USD" Style="width: 100%;">
                                    <RadzenText class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;">
                                        <b>@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", Model.SumPOValueUSD)}")</b>
                                    </RadzenText>
                                   
                                </RadzenFormField>
                                <ValidationMessage For="() => Model.IsAnyValueNotDefined" style="color:red; font-size:x-small;" />
                                <ValidationMessage For="() => Model.SumPOValueUSD" style="color:red; font-size:x-small;" />
                            </RadzenRow>
                           
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6">
                            @if (Model.PurchaseOrderCurrency.Id != CurrencyEnum.USD.Id && Model.PurchaseOrderCurrency.Id != CurrencyEnum.None.Id)
                            {
                                <RadzenFormField Text=@($"PO Value, ${Model.PurchaseOrderCurrency.Name}") Style="width: 100%; height:100%">
                                    <RadzenText class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;">
                                        <b>@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", Model.SumPOValueCurrency)}")</b>
                                    </RadzenText>
                                </RadzenFormField>


                            }
                        </RadzenColumn>

                    </RadzenRow>
                </RadzenColumn>



            </RadzenRow>

           
            <CascadingValue Value="@Model" >
                <DataGridForPurchaseOrderItems BudgetItems="@BudgetItems" OriginalBudgetItems="@OriginalBudgetItems"
                    ValidateAsync="@ValidateAsync"
                ></DataGridForPurchaseOrderItems>
            </CascadingValue>
         

        </EditForm>


    </RadzenStack>
}


@code {
    bool IsSameCurrency => Model.QuoteCurrency.Id == Model.PurchaseOrderCurrency.Id;
}
