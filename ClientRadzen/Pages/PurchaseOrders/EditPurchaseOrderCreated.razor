@page "/EditPurchaseOrderCreated/{PurchaseOrderId:guid}"


<PageTitle>Edit Purchase Requisition </PageTitle>
@if (debug)
{

}
@if (Model != null)
{

    <RadzenStack Orientation="Orientation.Vertical">
        <RadzenRow>
            <RadzenText TextStyle="TextStyle.DisplayH5"
                        Text="@($"Create New Purchase Order in {Model.MWOCECName} {Model.MWOName} with Main Budget {Model.MainBudgetItem.Name}")"></RadzenText>
        </RadzenRow>


        <EditForm Model="@Model" OnValidSubmit="ValidateAsync">
            <FluentValidationValidator @ref="_fluentValidationValidator" />
            <RadzenRow>


                <RadzenColumn Size="12" SizeMD="@MaxColumn">
                    <RadzenFormField Text="Purchase order Name" Style="width: 100%;">
                        <RadzenTextBox @bind-Value=@Model.PurchaseorderName class="w-100"
                                       @oninput="@((arg)=>ChangeName(arg.Value!.ToString()!))"
                                       Name="name" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.PurchaseorderName" style="color:red; font-size:x-small;" />

                </RadzenColumn>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Supplier" Style="width: 100%;">
                        <RadzenDropDown @bind-Value=@Model.Supplier Data=@Suppliers
                                        Name="supplier" TextProperty="Name"
                                        Placeholder="Select Supplier"
                                        Change="@(()=>SetSupplier(Model.Supplier!))"
                                        AllowClear=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                                        AllowFiltering="true"
                                        TValue="NewSupplierResponse?" />



                    </RadzenFormField>
                    <ValidationMessage For="() => Model.Supplier" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenButton Text="Add Supplier" Icon="support" Click="CreateSupplier" Style="width: 100%;" class="mt-2"
                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Add new Supplier", TooltipPosition.Top) )"></RadzenButton>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">

                    <RadzenFormField Text="Vendor Code" Style="width: 100%; height:100%">
                        <RadzenText Text=@Model.VendorCode class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                    </RadzenFormField>

                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">

                    <RadzenFormField Text="Tax Code" Style="width: 100%; height:100%">
                        <RadzenText Text=@Model.TaxCode class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                    </RadzenFormField>

                </RadzenColumn>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Purchase Requisition" Style="width: 100%;">
                        <RadzenTextBox @bind-Value=@Model.PurchaseRequisition class="w-100"
                                       @oninput="@((arg)=>ChangePR(arg.Value!.ToString()!))"
                                       Name="pr" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.PurchaseRequisition" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Quote No" Style="width: 100%;">
                        <RadzenTextBox @bind-Value=@Model.QuoteNo class="w-100"
                                       @oninput="@((arg)=>ChangeQuote(arg.Value!.ToString()!))"
                                       Name="quoteno" />

                    </RadzenFormField>
                    <ValidationMessage For="() => Model.QuoteNo" style="color:red; font-size:x-small;" />
                </RadzenColumn>@if (Model.IsAlteration)
                {
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenFormField Text="Account" Style="width: 100%;">

                            <RadzenText Text=@Model.AccountAssigment class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="3">
                        <RadzenFormField Text="MWO" Style="width: 100%;">

                            <RadzenText Text=@Model.MWOCECName class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                        </RadzenFormField>
                    </RadzenColumn>
                }
                else
                {
                    <RadzenColumn Size="12" SizeMD="6">
                        <RadzenFormField Text="Account" Style="width: 100%;">

                            <RadzenText Text=@Model.AccountAssigment class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                        </RadzenFormField>
                    </RadzenColumn>
                }

            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="Quote Currency" Style="width: 100%;">

                        <RadzenDropDown @bind-Value=@Model.QuoteCurrency Data=@CurrencyEnum.List Style="width: 100%;"
                                        AllowClear=true
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                                        AllowFiltering="true" Disabled=Model.IsAlteration
                                        Change="@((arg)=>ChangeQuoteCurrency((CurrencyEnum)arg))"
                                        Name="type" TextProperty="Name"
                                        TValue="CurrencyEnum" />
                    </RadzenFormField>
                    <ValidationMessage For="() => Model.QuoteCurrency" style="color:red; font-size:x-small;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    @if (Model.PurchaseOrderCurrency.Id == CurrencyEnum.COP.Id)
                    {
                        <RadzenRow>
                            <RadzenColumn Size="12" SizeMD="5">
                                <RadzenFormField Text=@($"PO TRM ") Style="width: 100%;">
                                    <RadzenNumeric ShowUpDown=false @bind-Value=@Model.USDCOP class="w-100"
                                                   @oninput="@((arg)=>ChangeTRMUSDCOP(arg.Value!.ToString()!))"
                                                   Name="usdcop" />

                                </RadzenFormField>
                                <ValidationMessage For="() => Model.USDCOP" style="color:red; font-size:x-small;" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-mt-2">
                                @if (UpdateCurrentTRM)
                                {
                                    <RadzenButton Icon="attach_money" Click=ClickUpdateOldTRM
                                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Update PO TRM {Model.OldTRMUSDCOP} COP/USD",
                                              TooltipPosition.Top))"></RadzenButton>
                                }
                                else
                                {
                                    <RadzenButton Icon="attach_money" Click=ClickUpdateCurrentTRM
                                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Update current TRM {MainApp.USDEURLabel} COP/USD",
                                              TooltipPosition.Top))"></RadzenButton>
                                }
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="5">
                                <RadzenFormField Text=@($"Today TRM") Style="width: 100%;">

                                    <RadzenText Text=@MainApp.USDCOPLabel class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                                </RadzenFormField>
                            </RadzenColumn>



                        </RadzenRow>

                    }
                    else if (Model.PurchaseOrderCurrency.Id == CurrencyEnum.EUR.Id)
                    {
                        <RadzenRow>
                            <RadzenColumn Size="12" SizeMD="5">
                                <RadzenFormField Text=@($"PO TRM ") Style="width: 100%;">
                                    <RadzenNumeric ShowUpDown=false @bind-Value=@Model.USDEUR class="w-100"
                                                   @oninput="@((arg)=>ChangeTRMUSDEUR(arg.Value!.ToString()!))"
                                                   Name="usdeur" />

                                </RadzenFormField>
                                <ValidationMessage For="() => Model.USDEUR" style="color:red; font-size:x-small;" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2">
                                @if (UpdateCurrentTRM)
                                {
                                    <RadzenButton Icon="attach_money" Click=ClickUpdateOldTRM
                                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Update PO TRM {Model.OldTRMUSDEUR} EUR/USD",
                                              TooltipPosition.Top))"></RadzenButton>
                                }
                                else
                                {
                                    <RadzenButton Icon="attach_money" Click=ClickUpdateCurrentTRM
                                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Update current TRM {MainApp.USDCOPLabel} EUR/USD",
                                              TooltipPosition.Top))"></RadzenButton>
                                }
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="5">
                                <RadzenFormField Text=@($"Today TRM") Style="width: 100%;">

                                    <RadzenText Text=@MainApp.USDEURLabel class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>
                    }
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="PO Currency" Style="width: 100%;">
                        <RadzenText Text=@Model.PurchaseOrderCurrency.Name class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />


                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenFormField Text="SPL" Style="width: 100%;">
                        <RadzenText Text=@Model.SPL class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;" />


                    </RadzenFormField>
                </RadzenColumn>
            </RadzenRow>


            <RadzenRow class="rz-mt-2">
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenButton Click="@SaveAsync" Variant="Variant.Flat" Text="@($"Edit PR {Model.PurchaseRequisition}")" Disabled=@(!Validated)
                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Edit PR", TooltipPosition.Top) )" Style="width: 100%;" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="3">
                    <RadzenButton Click="@Cancel" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Light" Text="Cancel" Style="width: 100%"
                                  MouseEnter="@(args => MainApp.ShowTooltip(args,$"Cancel", TooltipPosition.Top) )" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="6">
                    <RadzenRow>

                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenRow>
                                <RadzenFormField Text="PO Value, $USD" Style="width: 100%;">
                                    <RadzenText class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;">
                                        <b>@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", Model.SumPOValueUSD)}")</b>
                                    </RadzenText>

                                </RadzenFormField>
                                <ValidationMessage For="() => Model.IsAnyValueNotDefined" style="color:red; font-size:x-small;" />
                                <ValidationMessage For="() => Model.SumPOValueUSD" style="color:red; font-size:x-small;" />
                            </RadzenRow>

                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6">
                            @if (Model.PurchaseOrderCurrency.Id != CurrencyEnum.USD.Id && Model.PurchaseOrderCurrency.Id != CurrencyEnum.None.Id)
                            {
                                <RadzenFormField Text=@($"PO Value, ${Model.PurchaseOrderCurrency.Name}") Style="width: 100%; height:100%">
                                    <RadzenText class=@UISettings.TextBoxWithFieldNameclass Style="width: 100%;">
                                        <b>@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", Model.SumPOValueCurrency)}")</b>
                                    </RadzenText>
                                </RadzenFormField>


                            }
                        </RadzenColumn>

                    </RadzenRow>
                </RadzenColumn>



            </RadzenRow>

            @if (debug)
            {

            }<CascadingValue Value="@Model">
                <DataGridForPurchaseOrderItems BudgetItems="@BudgetItems" OriginalBudgetItems="@OriginalBudgetItems"
                                               ValidateAsync="@ValidateAsync"></DataGridForPurchaseOrderItems>
            </CascadingValue>
         @*    <RadzenRow class="rz-mt-2">
                <RadzenColumn Size="12" SizeMD="MaxColumn">
                    <RadzenDataGrid @ref="ordersGrid" AllowAlternatingRows="false" AllowFiltering="false" AllowPaging="true" PageSize="5"
                                    AllowSorting="false" EditMode="DataGridEditMode.Single" Density="@Density" AllowRowSelectOnRowClick=true
                                    Data="@Model.PurchaseOrderItems" TItem="PurchaseOrderItemRequest" RowDoubleClick=EditRow Responsive=true
                                    CellClick=ClickCell
                                    ColumnWidth="200px">

                        <Columns>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.BudgetItemName)"
                                                  Title="Item Id" Width="70px">
                                <Template Context="detail">
                                    @if (detail.BudgetItemId == Guid.Empty)
                                    {
                                        @("Add Item")
                                    }
                                    else
                                    {
                                        @detail.BudgetItemName
                                    }

                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId == Guid.Empty)
                                    {
                                        <RadzenDropDown @bind-Value=@ItemToAdd Data=@BudgetItems Style="width: 100%;"
                                                        Change="@(()=>AddNewItem(order))"
                                                        Name="budgetitem" TextProperty="NomenclatoreName"
                                                        AllowClear=true
                                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith"
                                                        AllowFiltering="true"
                                                        TValue="BudgetItemApprovedResponse" />
                                    }
                                    else
                                    {
                                        <RadzenText Text="@order.BudgetItemName"></RadzenText>
                                    }
                                </EditTemplate>

                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest" Property="@nameof(PurchaseOrderItemRequest.Name)"
                                                  Title="PO Item Name" Width="80px">
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        <RadzenTextBox @bind-Value="@order.Name" Style="width:100%"
                                                       @oninput="@((arg)=>ChangeName(order,arg.Value!.ToString()!))"></RadzenTextBox>

                                    }
                                </EditTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.Quantity)"
                                                  Title="Quantity" Width="30px">
                                <Template Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        @order.Quantity

                                    }
                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        <RadzenNumeric ShowUpDown=false @bind-Value=@order.Quantity
                                                       @oninput="@((arg)=>ChangeQuantity(order,arg.Value!.ToString()!))">
                                        </RadzenNumeric>
                                        <ValidationMessage For="() => order.Quantity" style="color:red; font-size:x-small;" />
                                    }



                                </EditTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.QuoteCurrencyValue)"
                                                  Title="@($"Value, {Model.QuoteCurrency.Name}")"
                                                  Width="40px">
                                <Template Context="detail">
                                    @if (detail.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.QuoteCurrencyValue)

                                    }

                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        <RadzenNumeric ShowUpDown=false @bind-Value=@order.QuoteCurrencyValue Name="CurrencyValue"
                                                       @onkeydown=@((arg)=>OnKeyDownCurrency(arg,order))
                                                       @oninput="@((arg)=>ChangeCurrencyValue(order,arg.Value!.ToString()!))"></RadzenNumeric>

                                    }



                                </EditTemplate>
                                <FooterTemplate>
                                    <b>@($"{String.Format(new CultureInfo("en-US"), "{0:C0}", Model.SumPOValueCurrency)}")</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Title="@($"Value, {Model.PurchaseOrderCurrency.Name}")" Width="30px"
                                                  Visible="@(!IsSameCurrency)">
                                <Template Context="detail">
                                    @if (detail.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.UnitaryValuePurchaseOrderCurrency)
                                    }

                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new CultureInfo("en-US"), "{0:C0}", order.UnitaryValuePurchaseOrderCurrency)
                                    }

                                </EditTemplate>
                                <FooterTemplate>
                                    <b>@($"{String.Format(new CultureInfo("en-US"), "{0:C0}", Model.SumPOValueSupplierCurrency)}")</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.POValueUSD)"
                                                  Title="Total, USD" Width="30px">
                                <Template Context="detail">
                                    @if (detail.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.POValueUSD)
                                    }

                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new CultureInfo("en-US"), "{0:C0}", order.POValueUSD)
                                    }

                                </EditTemplate>
                                <FooterTemplate>
                                    <b>@($"{String.Format(new CultureInfo("en-US"), "{0:C0}", Model.SumPOValueUSD)}")</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.Budget)"
                                                  Title="Budget, USD" Width="30px">
                                <Template Context="detail">
                                    @if (detail.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.Budget)
                                    }

                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        @String.Format(new CultureInfo("en-US"), "{0:C0}", order.Budget)
                                    }
                                </EditTemplate>
                                <FooterTemplate>
                                    <b>@($"{String.Format(new CultureInfo("en-US"), "{0:C0}", Model.SumBudget)}")</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.AssignedUSD)"
                                                  Title="Assigned, USD" Width="30px">
                                <Template Context="detail">
                                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.AssignedUSD)
                                </Template>
                                <EditTemplate Context="order">
                                    @String.Format(new CultureInfo("en-US"), "{0:C0}", order.AssignedUSD)
                                </EditTemplate>
                                <FooterTemplate>
                                    <b>@($"{String.Format(new CultureInfo("en-US"), "{0:C0}", Model.SumBudgetAssigned)}")</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.PotencialUSD)"
                                                  Title="Potential" Width="30px">
                                <Template Context="detail">
                                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.PotencialUSD)
                                </Template>
                                <EditTemplate Context="order">
                                    @String.Format(new CultureInfo("en-US"), "{0:C0}", order.PotencialUSD)
                                </EditTemplate>
                                <FooterTemplate>
                                    <b>@($"{String.Format(new CultureInfo("en-US"), "{0:C0}", Model.SumBudgetPotencial)}")</b>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest"
                                                  Property="@nameof(PurchaseOrderItemRequest.POItemPendingUSD)"
                                                  Title="Pending, USD" Width="30px">
                                <Template Context="detail">
                                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.POItemPendingUSD)
                                </Template>
                                <EditTemplate Context="order">
                                    @String.Format(new CultureInfo("en-US"), "{0:C0}", order.POItemPendingUSD)
                                </EditTemplate>

                            </RadzenDataGridColumn>


                            <RadzenDataGridColumn TItem="PurchaseOrderItemRequest" Context="order" Filterable="false" Sortable="false"
                                                  TextAlign="TextAlign.Right" Width="25px">
                                <Template Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.ExtraSmall"
                                                      MouseEnter="@(args => MainApp.ShowTooltip(args,$"Edit", TooltipPosition.Top) )"
                                                      Click="@(args => EditRowButton(order))" @onclick:stopPropagation="true">
                                        </RadzenButton>
                                        @if (order.BudgetItemId != Model.MainBudgetItemId)
                                        {
                                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter"
                                                          MouseEnter="@(args => MainApp.ShowTooltip(args,$"Delete", TooltipPosition.Left) )"
                                                          Size="ButtonSize.ExtraSmall" class="my-1 ms-1" Click="@(args => DeleteRow(order))" @onclick:stopPropagation="true">
                                            </RadzenButton>
                                        }
                                    }
                                </Template>
                                <EditTemplate Context="order">
                                    @if (order.BudgetItemId != Guid.Empty)
                                    {
                                        <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.ExtraSmall"
                                                      Click="@((args) => SaveRow(order))" MouseEnter="@(args => MainApp.ShowTooltip(args,$"Save", TooltipPosition.Top) )">
                                        </RadzenButton>
                                        <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.ExtraSmall"
                                                      class="my-1 ms-1" Click="@((args) => CancelEdit(order))" MouseEnter="@(args => MainApp.ShowTooltip(args,$"Cancel", TooltipPosition.Left) )">
                                        </RadzenButton>
                                    }
                                </EditTemplate>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </RadzenColumn>
            </RadzenRow> *@

        </EditForm>


    </RadzenStack>
}


@code {
    bool IsSameCurrency => Model.QuoteCurrency.Id == Model.PurchaseOrderCurrency.Id;
}
