<RadzenColumn Size="12" SizeLG="3" Class="rz-p-2">
    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-color-black"
                >@(Data.Email)</RadzenText>
</RadzenColumn>
<RadzenColumn Size="12" SizeLG="7" Class="rz-p-2">
    <RadzenRow>
        <RadzenColumn Size="12" SizeMD="6" SizeLG="4">


            <RadzenRow JustifyContent="JustifyContent.SpaceBetween" Style="width:100%">
                <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.H5" Class="rz-mb-0">Role</RadzenText>
                <RadzenText TextStyle="TextStyle.Caption"><b>@(Data.Role)</b></RadzenText>
            </RadzenRow>

        </RadzenColumn>

    </RadzenRow>

</RadzenColumn>
<RadzenColumn Size="12" SizeLG="2" Class="rz-p-2">
    <RadzenStack Orientation="Orientation.Vertical">
        <RadzenRow>
            @if(Data.Role!="Administrator")
            {
                <RadzenButton Icon="remove_done" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mr-1" Click="@(()=>UnConfirmUser(Data))"
                              MouseEnter="@(args => MainApp.ShowTooltip(args,$"Reset Password: {Data.Email}", TooltipPosition.Left) )" />
                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-ml-2" Click="@(()=>Delete(Data))"
                              MouseEnter="@(args => MainApp.ShowTooltip(args,$"Delete {Data.Email}", TooltipPosition.Left) )" />

            }
            

        </RadzenRow>

    </RadzenStack>
</RadzenColumn>

@code {
    [CascadingParameter]
    public App MainApp { get; set; }
    [Parameter]
    public UserReponse Data { get; set; }
    [CascadingParameter]
    private NewUserList MainPage { get; set; }
    async Task UnConfirmUser(UserReponse user)
    {
        
    }
    async Task Delete(UserReponse user)
    {

    }
}
