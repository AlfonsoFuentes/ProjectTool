@page "/SapAdjustListByMWO/{MWOId:guid}"

@if (Response != null)
{
    <RadzenStack Orientation="Orientation.Vertical">
        
       
        <RadzenRow>
            <RadzenColumn Size="12" SizeLG="5">
                <RadzenRow>
                    <RowTemplateTitle Title="@($"Data for {Response.MWOCECName}-{Response.MWOName} ")"></RowTemplateTitle>
                </RadzenRow>
                

                <RadzenRow>
                    <RadzenColumn Size="12" SizeLG="8">
                        <RadzenButton Icon="add" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Medium" class="rz-mb-2" Click="@(()=>CreateAdjust())"
                                      MouseEnter="@(args =>MainApp.ShowTooltip(args,$"Add new Date to {Response.MWOName}", TooltipPosition.Top) )" />

                    </RadzenColumn>


                </RadzenRow>
                <RadzenRow>
                    <RadzenDataGrid AllowFiltering="false" AllowColumnResize="false" AllowAlternatingRows="false" AllowFilterDateInput=true
                                    AllowGrouping="false" AllowSorting="false" PageSize="50" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                                    Density="Density.Compact" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" GridLines=DataGridGridLines.Both
                                    FilterPopupRenderMode="PopupRenderMode.OnDemand" ShowCellDataAsTooltip=true ShowColumnTitleAsTooltip=true
                                    Data="@Response.Adjustments" TItem="SapAdjustResponse" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true">
                        <Columns>
                            <RadzenDataGridColumn TItem="SapAdjustResponse"
                                                  Property="@nameof(SapAdjustResponse.Date)" FormatString="{0:d}" Title="Date" Width="50px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="SapAdjustResponse" Title="Assigned" Width="50px" TextAlign="TextAlign.Center">
                                <Template Context="detail">
                                    @($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.AssignedSap)}")

                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="SapAdjustResponse" Title="Actual" Width="50px" TextAlign="TextAlign.Center">
                                <Template Context="detail">
                                    @($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.ActualSap)}")

                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="SapAdjustResponse" Title="Commitment" Width="50px" TextAlign="TextAlign.Center">
                                <Template Context="detail">
                                    @($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.CommitmentSap)}")

                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="SapAdjustResponse" Title="Potential" Width="50px" TextAlign="TextAlign.Center">
                                <Template Context="detail">
                                    @($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", detail.PotencialSap)}")

                                </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn TItem="SapAdjustResponse" Title="Actions" Width="50px" TextAlign="TextAlign.Center">
                                <Template Context="detail">
                                    @if (detail.Date.Date != Response.MWOApprovedDate.Date)
                                    {
                                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" class="rz-ml-2"
                                                      Click="@(()=>Edit(detail))" MouseEnter="@(args =>MainApp.ShowTooltip(args,$"Edit Data for {detail.Date.ToShortDateString()}", TooltipPosition.Left) )" />

                                        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.ExtraSmall" class="rz-ml-2"
                                                      Click="@(()=>Remove(detail))" MouseEnter="@(args =>MainApp.ShowTooltip(args,$"Delete Data for {detail.Date.ToShortDateString()}", TooltipPosition.Left) )" />

                                    }


                                </Template>
                            </RadzenDataGridColumn>


                        </Columns>
                    </RadzenDataGrid>
                </RadzenRow>
               
            </RadzenColumn>
            <RadzenColumn Size="12" SizeLG="7">
                <RadzenCard>
                    <RadzenChart Style="height: 450px;">
                        @foreach (var row in Response.Series)
                        {
                            <RadzenLineSeries Data=@row.DataCollection ValueProperty="YValue" CategoryProperty="XValue" Title="@row.Name" Smooth="true">
                                <RadzenMarkers MarkerType="MarkerType.Circle" />
                                <RadzenSeriesDataLabels Visible="false" />
                            </RadzenLineSeries>

                        }



                        <RadzenLegend Visible="true" />
                        <RadzenAxisTitle Text="USD" />
                        <RadzenCategoryAxis Padding="20" />
                        <RadzenValueAxis Formatter="@FormatAsUSD">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="USD" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
}
@code {
    bool smooth = false;
    bool showDataLabels = false;
    bool showMarkers = true;



    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }


}
